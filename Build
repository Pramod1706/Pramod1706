The error in your Jenkins pipeline is:

java.io.NotSerializableException: groovy.json.JsonSlurper

Cause of the Error

Jenkins runs pipeline steps in separate executions, meaning non-serializable objects (like JsonSlurper) cannot be stored in Jenkins' environment (env or global variables). Groovy's JsonSlurper creates a complex object that Jenkins cannot serialize.

Fix

To fix this, ensure that JSON data is processed within the script block and not stored in env.


---

Fixed Jenkinsfile

pipeline {
    agent any
    parameters {
        string(name: 'API_Name', defaultValue: '', description: 'API Name to fetch details')
    }
    stages {
        stage('Read JSON and Process Data') {
            steps {
                script {
                    // Function to read and parse JSON without causing serialization issues
                    def parseJsonFile = { filePath ->
                        def jsonText = readFile(filePath)
                        return new groovy.json.JsonSlurper().parseText(jsonText)
                    }

                    // Read and process Production JSON
                    def namespaceJson_PROD = parseJsonFile("./cd-production/namespace/prod.json")
                    def prodData = namespaceJson_PROD[params.API_Name] ?: error "API Name '${params.API_Name}' not found in Production namespace JSON"
                    
                    echo "Production Details:"
                    echo "Namespace: ${prodData.namespace}"
                    echo "Helm Chat Name: ${prodData.helmChatName}"
                    echo "Helm Chat Name Reference: ${prodData.helmChatName_reference}"

                    // Read and process CONT JSON
                    def namespaceJson_CONT = parseJsonFile("./cd-production/namespace/cont.json")
                    def contData = namespaceJson_CONT[params.API_Name] ?: error "API Name '${params.API_Name}' not found in CONT namespace JSON"

                    echo "CONT Details:"
                    echo "Namespace: ${contData.namespace}"
                    echo "Helm Chat Name: ${contData.helmChatName}"
                    echo "Helm Chat Name Reference: ${contData.helmChatName_reference}"
                }
            }
        }
    }
}


---

Key Fixes

1. Avoids Storing JSON Objects in env

env variables must be plain strings, not objects.



2. Ensures JSON Data is Read & Processed in the Same Step

JSON objects don’t persist across pipeline steps due to serialization.



3. Uses ?: for Safe API Name Lookup

Prevents crashes if params.API_Name doesn’t exist in the JSON.





---

This should fix your NotSerializableException issue. Let me know if you face any further errors!
