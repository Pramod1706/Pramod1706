pipeline {
    agent any
    parameters {
        string(name: 'TRIGGER_DATE', defaultValue: '2024-10-19', description: 'Date to trigger Job 2 (format: YYYY-MM-DD)')
        string(name: 'TRIGGER_TIME', defaultValue: '15:30', description: 'Time to trigger Job 2 (24-hour format: HH:mm)')
    }
    stages {
        stage('Schedule Job 2') {
            steps {
                script {
                    // Read parameters
                    def triggerDate = params.TRIGGER_DATE
                    def triggerTime = params.TRIGGER_TIME

                    // Parse the desired time
                    def triggerDateTime = Date.parse("yyyy-MM-dd HH:mm", "${triggerDate} ${triggerTime}")
                    def currentTime = new Date()

                    // Calculate delay in seconds
                    def delayInSeconds = (triggerDateTime.time - currentTime.time) / 1000

                    if (delayInSeconds > 0) {
                        echo "Waiting for ${delayInSeconds} seconds to trigger Job 2 at ${triggerDateTime}."
                        sleep time: delayInSeconds, unit: 'SECONDS'
                    } else {
                        echo "The specified time has already passed. Triggering Job 2 immediately."
                    }

                    // Trigger Job 2
                    build job: 'Job2'
                }
            }
        }
    }
}
